//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 _vu_m[4];                   // Offset:    0 Size:    64
//   float4 _vu_h[223];                 // Offset:   64 Size:  3568
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// TEXCOORD                 0   xyzw        0     NONE  float   xyz 
// TEXCOORD                 1   xyz         1     NONE  float   xyz 
// TEXCOORD                 2   xyzw        2     NONE  float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   uint   xyzw
// TEXCOORD                 4   xyzw        4     NONE  float   xyzw
// TEXCOORD                 5   xy          5     NONE  float   xy  
// TEXCOORD                 6   xyzw        6     NONE  float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Position              0   xyzw        0      POS  float   xyzw
// TEXCOORD                 5   xyzw        1     NONE  float   xyzw
// TEXCOORD                 6   xyzw        2     NONE  float   xyzw
// TEXCOORD                 0   xyzw        3     NONE  float   xyzw
// TEXCOORD                 1   xyzw        4     NONE  float   xyzw
// TEXCOORD                 2   xyzw        5     NONE  float   xyzw
// TEXCOORD                 3   xyzw        6     NONE  float   xyzw
// TEXCOORD                 4   xy          7     NONE  float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[227], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xy
dcl_temps 12
mov r0.xyzw, v2.xyzw
mov r1.xyzw, v3.xyzw
mov r2.xyzw, v4.xyzw
mov r3.xyz, v0.xyzx
mov r4.xyz, v1.xyzx
mov r5.xy, v5.xyxx
mov r3.xyz, r3.xyzx
mov r4.xyz, r4.xyzx
mov r0.xyzw, r0.xyzw
utof r1.xyzw, r1.xyzw
mov r2.xyzw, r2.xyzw
mov r5.xy, r5.xyxx
mov r3.w, cb0[9].x
mov r4.w, cb0[3].x
mov r5.z, cb0[25].z
mov r1.xyzw, r1.xyzw
ftoi r1.xyzw, r1.xyzw
mov r1.xyzw, r1.xyzw
imul null, r5.w, r1.x, l(3)
iadd r5.w, r5.w, l(22)
mul r6.xyzw, r2.xxxx, cb0[r5.w + 4].xyzw
imul null, r5.w, r1.y, l(3)
iadd r5.w, r5.w, l(22)
mul r7.xyzw, r2.yyyy, cb0[r5.w + 4].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
imul null, r5.w, r1.z, l(3)
iadd r5.w, r5.w, l(22)
mul r7.xyzw, r2.zzzz, cb0[r5.w + 4].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
imul null, r5.w, r1.w, l(3)
iadd r5.w, r5.w, l(22)
mul r7.xyzw, r2.wwww, cb0[r5.w + 4].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
imul null, r5.w, r1.x, l(3)
iadd r5.w, r5.w, l(23)
mul r7.xyzw, r2.xxxx, cb0[r5.w + 4].xyzw
imul null, r5.w, r1.y, l(3)
iadd r5.w, r5.w, l(23)
mul r8.xyzw, r2.yyyy, cb0[r5.w + 4].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
imul null, r5.w, r1.z, l(3)
iadd r5.w, r5.w, l(23)
mul r8.xyzw, r2.zzzz, cb0[r5.w + 4].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
imul null, r5.w, r1.w, l(3)
iadd r5.w, r5.w, l(23)
mul r8.xyzw, r2.wwww, cb0[r5.w + 4].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
imul null, r1.x, r1.x, l(3)
iadd r1.x, r1.x, l(24)
mul r8.xyzw, r2.xxxx, cb0[r1.x + 4].xyzw
imul null, r1.x, r1.y, l(3)
iadd r1.x, r1.x, l(24)
mul r9.xyzw, r2.yyyy, cb0[r1.x + 4].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
imul null, r1.x, r1.z, l(3)
iadd r1.x, r1.x, l(24)
mul r9.xyzw, r2.zzzz, cb0[r1.x + 4].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
imul null, r1.x, r1.w, l(3)
iadd r1.x, r1.x, l(24)
mul r1.xyzw, r2.wwww, cb0[r1.x + 4].xyzw
add r1.xyzw, r1.xyzw, r8.xyzw
mov r2.w, l(0)
mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
add r2.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mov r2.xyz, r2.xyzx
dp4 r4.x, r6.xyzw, r2.xyzw
dp4 r4.y, r7.xyzw, r2.xyzw
dp4 r2.x, r1.xyzw, r2.xyzw
mov r8.w, l(0)
mul r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
add r8.xyz, r0.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mov r8.xyz, r8.xyzx
dp4 r0.x, r6.xyzw, r8.xyzw
dp4 r0.y, r7.xyzw, r8.xyzw
dp4 r0.z, r1.xyzw, r8.xyzw
mov r8.w, l(1.000000)
mul r2.yzw, r3.xxyz, cb0[7].xxyz
add r8.xyz, r2.yzwy, cb0[8].xyzx
dp4 r2.y, r6.xyzw, r8.xyzw
dp4 r2.z, r7.xyzw, r8.xyzw
dp4 r1.x, r1.xyzw, r8.xyzw
mov r6.w, l(1.000000)
mul r1.yzw, r2.yyyy, cb0[10].xxyz
mul r3.xyz, r2.zzzz, cb0[11].xyzx
add r1.yzw, r1.yyzw, r3.xxyz
mul r3.xyz, r1.xxxx, cb0[12].xyzx
add r1.yzw, r1.yyzw, r3.xxyz
add r3.xyz, cb0[13].xyzx, cb0[23].xyzx
add r6.xyz, r1.yzwy, r3.xyzx
mul r1.xyzw, r1.xxxx, cb0[16].xyzw
mul r7.xyzw, r2.zzzz, cb0[15].xyzw
mul r8.xyzw, r2.yyyy, cb0[14].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
add r1.xyzw, r1.xyzw, r7.xyzw
add r1.xyzw, r1.xyzw, cb0[17].xyzw
mov r7.xyzw, -r6.xyzw
add r7.xyzw, r1.xyzw, r7.xyzw
mul r1.xyzw, r1.wwww, r7.xyzw
add r1.xyzw, r1.xyzw, r6.xyzw
mov r2.yzw, l(0,0,0,0)
add r6.xyz, r1.xyzx, r2.yzwy
mul r1.xyzw, r1.wwww, cb0[21].xyzw
mul r7.xyzw, r6.zzzz, cb0[20].xyzw
mul r8.xyzw, r6.yyyy, cb0[19].xyzw
mul r9.xyzw, r6.xxxx, cb0[18].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
add r1.xyzw, r1.xyzw, r7.xyzw
mov r1.xzw, r1.xxzw
mov r6.xyz, r6.xyzx
mov r2.yzw, -cb0[24].xxyz
add r2.yzw, r2.wwyz, r6.zzxy
mov r3.x, cb0[4].w
mov r3.x, r3.x
dp3 r3.y, r2.yzwy, r2.yzwy
rsq r7.xyz, r3.yyyy
mul r3.y, r3.y, r7.z
mov r7.xyz, r7.xyzx
mov r7.xyz, r7.xyzx
mul r7.xyw, r2.zwzy, r7.xyxz
mov r7.xyw, r7.xyxw
mov r2.w, cb0[5].x
mov r2.z, r3.y
mov r2.y, r2.y
max r3.y, l(0.000000), cb0[5].w
lt r3.z, l(0.000000), r3.y
if_nz r3.z
  mul r3.y, r7.z, r3.y
  mul r3.z, r2.y, r3.y
  mov r3.y, -r3.y
  add r3.y, r3.y, l(1.000000)
  mul r8.y, r2.z, r3.y
  mov r3.y, -r3.z
  add r8.x, r2.y, r3.y
  add r3.y, r3.z, r5.z
  mov r3.z, -cb0[6].y
  add r3.y, r3.z, r3.y
  mul r3.y, r3.y, cb0[5].y
  max r3.y, r3.y, l(-127.000000)
  mov r3.y, -r3.y
  exp r3.y, r3.y
  mul r8.z, r3.y, cb0[6].x
else 
  mov r8.xyz, r2.yzwy
endif 
mul r2.y, r8.x, cb0[5].y
max r2.y, r2.y, l(-127.000000)
mov r2.w, -r2.y
exp r2.w, r2.w
mov r2.w, -r2.w
add r2.w, r2.w, l(1.000000)
div r2.w, r2.w, r2.y
mul r3.y, r2.y, l(0.240227)
mov r3.y, -r3.y
add r3.y, r3.y, l(0.693147)
mov r3.z, -r2.y
max r2.y, r2.y, r3.z
lt r2.y, l(0.010000), r2.y
if_nz r2.y
  mov r3.y, r2.w
else 
  mov r3.y, r3.y
endif 
mov r3.y, r3.y
mul r2.y, r3.y, r8.z
mul r2.w, r8.y, r2.y
mov r8.xzw, cb0[4].xxyz
mov r8.xzw, r8.xxzw
mov r9.xyz, l(0,0,0,0)
lt r3.y, l(0.000000), cb0[1].w
eq r3.z, l(0.000000), cb0[6].z
and r3.y, r3.z, r3.y
if_nz r3.y
  mov r3.y, -r3.w
  add r3.y, r3.y, r8.y
  max r3.y, r3.y, l(0.000000)
  mul r2.y, r2.y, r3.y
  mov r2.y, -r2.y
  exp r2.y, r2.y
  max r2.y, r2.y, l(0.000000)
  min r2.y, r2.y, l(1.000000)
  dp3 r3.y, r7.xywx, cb0[1].xyzx
  max r3.y, r3.y, l(0.000000)
  min r3.y, r3.y, l(1.000000)
  log r3.y, r3.y
  mul r3.y, r3.y, cb0[0].w
  exp r3.yzw, r3.yyyy
  mov r3.yzw, r3.yyzw
  mul r3.yzw, r3.yyzw, cb0[0].xxyz
  mov r2.y, -r2.y
  add r7.xyz, r2.yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
  mov r7.xyz, r7.xyzx
  mul r9.xyz, r3.yzwy, r7.xyzx
endif 
mov r3.x, r3.x
mov r2.y, -r2.w
exp r2.y, r2.y
max r2.y, r2.y, l(0.000000)
min r2.y, r2.y, l(1.000000)
max r3.w, r3.x, r2.y
mov r3.w, r3.w
lt r2.y, l(0.000000), cb0[6].w
lt r2.z, cb0[6].w, r2.z
and r2.y, r2.z, r2.y
if_nz r2.y
  mov r3.w, l(1.000000)
  mov r9.xyz, l(0,0,0,0)
endif 
mov r2.y, -r3.w
add r2.yzw, r2.yyyy, l(0.000000, 1.000000, 1.000000, 1.000000)
mov r2.yzw, r2.yyzw
mul r2.yzw, r2.yyzw, r8.xxzw
add r3.xyz, r9.xyzx, r2.yzwy
mov r3.w, r3.w
mov r7.w, l(0)
mov r2.yzw, cb0[2].xxxx
mov r2.yzw, r2.yyzw
mov r2.yzw, r2.yyzw
mul r2.yzw, r2.yyzw, cb0[10].xxyz
mov r8.xyz, cb0[2].yyyy
mov r8.xyz, r8.xyzx
mov r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[11].xyzx
mov r9.xyz, cb0[2].zzzz
mov r9.xyz, r9.xyzx
mov r9.xyz, r9.xyzx
mul r9.xyz, r9.xyzx, cb0[12].xyzx
mul r10.xyz, r0.zzzz, r9.xyzx
mul r11.xyz, r0.yyyy, r8.xyzx
mul r0.xyz, r0.xxxx, r2.yzwy
add r0.xyz, r0.xyzx, r11.xyzx
add r10.xyz, r0.xyzx, r10.xyzx
mul r0.x, r0.w, l(2.000000)
add r0.x, r0.x, l(-1.000000)
mul r10.w, r4.w, r0.x
mov r10.w, r10.w
mul r0.xyz, r2.xxxx, r9.xyzx
mul r4.yzw, r4.yyyy, r8.xxyz
mul r2.xyz, r2.yzwy, r4.xxxx
add r2.xyz, r2.xyzx, r4.yzwy
add r7.xyz, r0.xyzx, r2.xyzx
mov r6.w, r1.w
mov r0.x, l(1.000000)
add r0.x, r0.x, l(1.000000)
mul r0.x, r0.x, cb0[22].w
add r0.x, r0.x, l(-1.000000)
mul r1.y, r0.x, r1.y
mov r1.xzw, r1.xxzw
mov r1.y, r1.y
mov r7.xyz, r7.xyzx
mov r7.w, r7.w
mov r10.xyz, r10.xyzx
mov r10.w, r10.w
mov r5.xy, r5.xyxx
mov r3.xyz, r3.xyzx
mov r3.w, r3.w
mov r6.xyz, r6.xyzx
mov r6.w, r6.w
mov r1.xyzw, r1.xyzw
mov r1.y, -r1.y
mul r0.x, r1.z, l(2.000000)
mov r0.y, -r1.w
add r1.z, r0.y, r0.x
mov r1.xw, r1.xxxw
mov r1.y, r1.y
mov r1.z, r1.z
mov r1.xyzw, r1.xyzw
mov r1.xyzw, r1.xyzw
mov r0.x, r1.x
mov r0.y, -r1.y
add r0.z, r1.w, r1.z
mul r0.z, r0.z, l(0.500000)
mov r0.w, r1.w
mov r1.xyzw, r1.xyzw
mov r7.xyzw, r7.xyzw
mov r10.xyzw, r10.xyzw
mov r3.xyzw, r3.xyzw
mov r6.xyzw, r6.xyzw
mov r5.xy, r5.xyxx
mov o0.x, r0.x
mov o0.y, r0.y
mov o0.z, r0.z
mov o0.w, r0.w
mov o1.xyzw, r1.xyzw
mov o2.xyzw, r1.xyzw
mov o3.xyzw, r7.xyzw
mov o4.xyzw, r10.xyzw
mov o5.xyzw, r3.xyzw
mov o6.xyzw, r6.xyzw
mov o7.xy, r5.xyxx
ret 
// Approximately 293 instruction slots used

